services:
  traefik:
    extends:
      file: docker-compose.yml
      service: traefik

  ui:
    extends:
      file: docker-compose.yml
      service: ui
    build:
      context: ./ui
      dockerfile: Dockerfile.dev
    volumes:
      - ./ui/src:/app/src
    labels: !override
      - "traefik.enable=true"
      - "traefik.project=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.terrarun-ui.rule=Host(`$DOMAIN`)"
      - "traefik.http.routers.terrarun-ui.entrypoints=websecure"
      - "traefik.http.routers.terrarun-ui.tls=true"
      - "traefik.http.services.terrarun-ui.loadbalancer.server.port=3000"
      - "traefik.http.routers.terrarun-ui.service=terrarun-ui"

  api:
    extends:
      file: docker-compose.yml
      service: api
    # Only for local development
    #entrypoint: ["python", "terrarun.py", "--ssl-cert-private-key", "./ssl/private.pem", "--ssl-cert-public-key", "./ssl/public.pem"]
    volumes:
      - ./:/app

  worker:
    extends:
      file: docker-compose.yml
      service: worker
    volumes:
      - ./:/app

  cron-tasks:
    extends:
      file: docker-compose.yml
      service: cron-tasks

    # Only for local development
    volumes:
      - ./:/app

  db:
    extends:
      file: docker-compose.yml
      service: db

  minio:
    extends:
      file: docker-compose.yml
      service: minio

  createbucket:
    extends:
      file: docker-compose.yml
      service: createbucket

  # Example custom agent
  agent:
    extends:
      file: docker-compose.yml
      service: agent
    # Don't start agent for local development, as self-generated SSL certificates
    # are not being injected
    profiles:
      - donotstart

  # Example run task application
  tfsec-task:
    extends:
      file: docker-compose.yml
      service: tfsec-task

volumes:
  mysqldata:

networks:
  web: 
    name: terrun-web
  default:
    name: terrarun-default
    driver: bridge
