"""Add columns to state version to handle new attributes and upload endpoint

Revision ID: c2ecefd99159
Revises: 376a843af267
Create Date: 2024-08-03 05:49:29.376688

"""
import json
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c2ecefd99159'
down_revision = '376a843af267'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Rename state_json to state column
    op.drop_constraint('state_version_ibfk_3', 'state_version', type_='foreignkey')
    op.alter_column('state_version', 'state_json_id', existing_type=sa.Integer(), nullable=True, new_column_name='state_id')
    op.create_foreign_key('fk_blob_state_version_state', 'state_version', 'blob', ['state_id'], ['id'])

    op.add_column('state_version', sa.Column('json_state_id', sa.Integer(), nullable=True))
    op.add_column('state_version', sa.Column('lineage', sa.String(length=128), nullable=True))
    op.add_column('state_version', sa.Column('md5', sa.String(length=128), nullable=True))
    op.add_column('state_version', sa.Column('serial', sa.Integer(), nullable=True))
    op.add_column('state_version', sa.Column('state_version', sa.Integer(), nullable=True))
    op.add_column('state_version', sa.Column('terraform_version', sa.String(length=128), nullable=True))
    op.add_column('state_version', sa.Column('intermediate', sa.Boolean(), nullable=False))
    op.create_foreign_key('fk_blob_state_version_json_state', 'state_version', 'blob', ['json_state_id'], ['id'])

    bind = op.get_bind()
    for row in bind.execute("""SELECT state_version.id AS state_version_id, `blob`.data AS state_version_data FROM state_version INNER JOIN `blob` ON state_version.state_id=`blob`.id""").all():
        state = {}
        if row['state_version_data']:
            state = json.loads(row['state_version_data'].decode('utf-8'))
        bind.execute(
            sa.sql.text(
                """UPDATE state_version SET lineage=:lineage, md5=:md5, serial=:serial, state_version=:state_version, terraform_version=:terraform_version, intermediate=:intermediate WHERE id=:state_version_id"""
            ),
            lineage=state.get("lineage"),
            md5=None,
            serial=state.get("serial"),
            state_version=state.get("version"),
            terraform_version=state.get("terraform_version"),
            intermediate=False,
            state_version_id=row['state_version_id']
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_blob_state_version_json_state', 'state_version', type_='foreignkey')
    op.drop_constraint('fk_blob_state_version_state', 'state_version', type_='foreignkey')
    op.alter_column('state_version', 'state_id', existing_type=sa.Integer(), nullable=True, new_column_name='state_json_id')
    op.create_foreign_key('state_version_ibfk_3', 'state_version', 'blob', ['state_json_id'], ['id'])
    op.drop_column('state_version', 'intermediate')
    op.drop_column('state_version', 'terraform_version')
    op.drop_column('state_version', 'state_version')
    op.drop_column('state_version', 'serial')
    op.drop_column('state_version', 'md5')
    op.drop_column('state_version', 'lineage')
    op.drop_column('state_version', 'json_state_id')
    # ### end Alembic commands ###
