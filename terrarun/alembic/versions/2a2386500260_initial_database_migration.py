"""Initial database migration

Revision ID: 2a2386500260
Revises: 
Create Date: 2022-10-19 07:46:58.370145

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2a2386500260'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lifecycle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_lifecycle_organisation_id_organisation_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organisation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('name_id', sa.String(length=128), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('session_timeout', sa.Integer(), nullable=True),
    sa.Column('session_remember', sa.Integer(), nullable=True),
    sa.Column('collaborator_auth_policy', sa.Enum('PASSWORD', 'TWO_FACTORY_MANDATORY', name='collaboratorauthpolicytype'), nullable=True),
    sa.Column('cost_estimation_enabled', sa.Boolean(), nullable=True),
    sa.Column('configuration_designer_enabled', sa.Boolean(), nullable=True),
    sa.Column('operations_enabled', sa.Boolean(), nullable=True),
    sa.Column('private_registry_enabled', sa.Boolean(), nullable=True),
    sa.Column('sentinel_enabled', sa.Boolean(), nullable=True),
    sa.Column('run_tasks_enabled', sa.Boolean(), nullable=True),
    sa.Column('state_storage_enabled', sa.Boolean(), nullable=True),
    sa.Column('team_enabled', sa.Boolean(), nullable=True),
    sa.Column('vcs_integration_enabled', sa.Boolean(), nullable=True),
    sa.Column('usage_reporting_enabled', sa.Boolean(), nullable=True),
    sa.Column('self_serve_billing_enabled', sa.Boolean(), nullable=True),
    sa.Column('audit_logging_enabled', sa.Boolean(), nullable=True),
    sa.Column('agents_enabled', sa.Boolean(), nullable=True),
    sa.Column('sso_enabled', sa.Boolean(), nullable=True),
    sa.Column('fair_run_queuing_enabled', sa.Boolean(), nullable=True),
    sa.Column('two_factor_conformant', sa.Boolean(), nullable=True),
    sa.Column('saml_enabled', sa.Boolean(), nullable=True),
    sa.Column('user_limit', sa.Integer(), nullable=True),
    sa.Column('send_passing_statuses_for_untriggered_speculative_plans', sa.Boolean(), nullable=True),
    sa.Column('owners_team_saml_role_id', sa.String(length=128), nullable=True),
    sa.Column('default_lifecycle_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['default_lifecycle_id'], ['lifecycle.id'], name='fk_organisation_default_lifecycle_id_lifecycle_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=128), nullable=True),
    sa.Column('salt', sa.BLOB(), nullable=True),
    sa.Column('password', sa.BLOB(), nullable=True),
    sa.Column('email', sa.String(length=128), nullable=True),
    sa.Column('service_account', sa.Boolean(), nullable=True),
    sa.Column('site_admin', sa.Boolean(), nullable=True),
    sa.Column('user_type', sa.Enum('NORMAL', 'TASK_EXECUTION_USER', name='usertype'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('audit_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('object_id', sa.Integer(), nullable=True),
    sa.Column('object_type', sa.String(length=128), nullable=True),
    sa.Column('old_value', sa.LargeBinary(), nullable=True),
    sa.Column('new_value', sa.LargeBinary(), nullable=True),
    sa.Column('event_type', sa.Enum('STATUS_CHANGE', name='auditeventtype'), nullable=True),
    sa.Column('event_description', sa.String(length=128), nullable=True),
    sa.Column('comment', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('environment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_environment_organisation_id_organisation_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organisation_owner',
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('organisation_id', 'user_id')
    )
    op.create_table('project',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('lifecycle_id', sa.Integer(), nullable=False),
    sa.Column('allow_destroy_plan', sa.Boolean(), nullable=True),
    sa.Column('auto_apply', sa.Boolean(), nullable=True),
    sa.Column('execution_mode', sa.Enum('REMOTE', 'LOCAL', 'AGENT', name='workspaceexecutionmode'), nullable=True),
    sa.Column('file_triggers_enabled', sa.Boolean(), nullable=True),
    sa.Column('global_remote_state', sa.Boolean(), nullable=True),
    sa.Column('operations', sa.Boolean(), nullable=True),
    sa.Column('queue_all_runs', sa.Boolean(), nullable=True),
    sa.Column('speculative_enabled', sa.Boolean(), nullable=True),
    sa.Column('terraform_version', sa.String(length=128), nullable=True),
    sa.Column('trigger_prefixes', sa.String(length=128), nullable=True),
    sa.Column('trigger_patterns', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_branch', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_ingress_submodules', sa.Boolean(), nullable=True),
    sa.Column('vcs_repo_identifier', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_tags_regex', sa.String(length=128), nullable=True),
    sa.Column('working_directory', sa.String(length=128), nullable=True),
    sa.Column('assessments_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['lifecycle_id'], ['lifecycle.id'], name='fk_project_lifecycle_id_lifecycle_id'),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_project_organisation_id_organisation_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('url', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('hmac_key', sa.String(length=128), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('sso_team_id', sa.String(length=128), nullable=True),
    sa.Column('visibility', sa.Enum('ORGANIZATION', 'SECRET', name='teamvisibility'), nullable=True),
    sa.Column('manage_policies', sa.Boolean(), nullable=True),
    sa.Column('manage_policy_overrides', sa.Boolean(), nullable=True),
    sa.Column('manage_run_tasks', sa.Boolean(), nullable=True),
    sa.Column('manage_vcs_settings', sa.Boolean(), nullable=True),
    sa.Column('manage_workspaces', sa.Boolean(), nullable=True),
    sa.Column('manage_providers', sa.Boolean(), nullable=True),
    sa.Column('manage_modules', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_token',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('USER_GENERATED', 'UI', name='usertokentype'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('last_used', sa.DateTime(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('token', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lifecycle_environment',
    sa.Column('lifecycle_id', sa.Integer(), nullable=False),
    sa.Column('environment_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['environment_id'], ['environment.id'], ),
    sa.ForeignKeyConstraint(['lifecycle_id'], ['lifecycle.id'], ),
    sa.PrimaryKeyConstraint('lifecycle_id', 'environment_id')
    )
    op.create_table('team_user_membership',
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('team_id', 'user_id')
    )
    op.create_table('workspace',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.Column('organisation_id', sa.Integer(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('environment_id', sa.Integer(), nullable=False),
    sa.Column('allow_destroy_plan', sa.Boolean(), nullable=True),
    sa.Column('auto_apply', sa.Boolean(), nullable=True),
    sa.Column('execution_mode', sa.Enum('REMOTE', 'LOCAL', 'AGENT', name='workspaceexecutionmode'), nullable=True),
    sa.Column('file_triggers_enabled', sa.Boolean(), nullable=True),
    sa.Column('global_remote_state', sa.Boolean(), nullable=True),
    sa.Column('operations', sa.Boolean(), nullable=True),
    sa.Column('queue_all_runs', sa.Boolean(), nullable=True),
    sa.Column('speculative_enabled', sa.Boolean(), nullable=True),
    sa.Column('terraform_version', sa.String(length=128), nullable=True),
    sa.Column('trigger_prefixes', sa.String(length=128), nullable=True),
    sa.Column('trigger_patterns', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_branch', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_ingress_submodules', sa.Boolean(), nullable=True),
    sa.Column('vcs_repo_identifier', sa.String(length=128), nullable=True),
    sa.Column('vcs_repo_tags_regex', sa.String(length=128), nullable=True),
    sa.Column('working_directory', sa.String(length=128), nullable=True),
    sa.Column('assessments_enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['environment_id'], ['environment.id'], name='fk_workspace_environment_id_environment_id'),
    sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='workspace_project_id_project_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('configuration_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('configuration_blob_id', sa.Integer(), nullable=True),
    sa.Column('speculative', sa.Boolean(), nullable=True),
    sa.Column('auto_queue_runs', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'FETCHING', 'UPLOADED', 'ARCHIVED', 'ERRORED', name='configurationversionstatus'), nullable=True),
    sa.ForeignKeyConstraint(['configuration_blob_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('team_workspace_access',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('access_type', sa.Enum('READ', 'PLAN', 'WRITE', 'ADMIN', 'CUSTOM', name='teamworkspaceaccesstype'), nullable=True),
    sa.Column('permission_runs', sa.Enum('READ', 'PLAN', 'APPLY', name='teamworkspacerunspermission'), nullable=True),
    sa.Column('permission_variables', sa.Enum('NONE', 'READ', 'WRITE', name='teamworkspacevariablespermission'), nullable=True),
    sa.Column('permission_state_versions', sa.Enum('NONE', 'READ_OUTPUTS', 'READ', 'WRITE', name='teamworkspacestateversionspermissions'), nullable=True),
    sa.Column('permission_sentinel_mocks', sa.Enum('NONE', 'READ', name='teamworkspacesentinelmockspermission'), nullable=True),
    sa.Column('permission_workspace_locking', sa.Boolean(), nullable=True),
    sa.Column('permission_run_tasks', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], ),
    sa.PrimaryKeyConstraint('id', 'team_id', 'workspace_id')
    )
    op.create_table('workspace_tag',
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], ),
    sa.PrimaryKeyConstraint('workspace_id', 'tag_id')
    )
    op.create_table('workspace_task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('enforcement_level', sa.Enum('ADVISORY', 'MANDATORY', name='workspacetaskenforcementlevel'), nullable=True),
    sa.Column('stage', sa.Enum('PRE_PLAN', 'POST_PLAN', 'PRE_APPLY', name='workspacetaskstage'), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('run',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('configuration_version_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'FETCHING', 'FETCHING_COMPLETED', 'PRE_PLAN_RUNNING', 'PRE_PLAN_COMPLETED', 'QUEUING', 'PLAN_QUEUED', 'PLANNING', 'PLANNED', 'COST_ESTIMATING', 'COST_ESTIMATED', 'POLICY_CHECKING', 'POLICY_OVERRIDE', 'POLICY_SOFT_FAILED', 'POLICY_CHECKED', 'CONFIRMED', 'POST_PLAN_RUNNING', 'POST_PLAN_COMPLETED', 'PLANNED_AND_FINISHED', 'PRE_APPLY_RUNNING', 'PRE_APPLY_COMPLETED', 'APPLY_QUEUED', 'APPLYING', 'APPLIED', 'DISCARDED', 'ERRORED', 'CANCELED', 'FORCE_CANCELLED', name='runstatus'), nullable=True),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('auto_apply', sa.Boolean(), nullable=True),
    sa.Column('message', sa.String(length=128), nullable=True),
    sa.Column('plan_only', sa.Boolean(), nullable=True),
    sa.Column('refresh', sa.Boolean(), nullable=True),
    sa.Column('refresh_only', sa.Boolean(), nullable=True),
    sa.Column('is_destroy', sa.Boolean(), nullable=True),
    sa.Column('replace_addrs', sa.String(length=128), nullable=True),
    sa.Column('target_addrs', sa.String(length=128), nullable=True),
    sa.Column('variables', sa.String(length=128), nullable=True),
    sa.Column('terraform_version', sa.String(length=128), nullable=True),
    sa.Column('allow_empty_apply', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_version_id'], ['configuration_version.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['user.id'], name='run_created_by_id_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('run_queue',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('state_version',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workspace_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('state_version', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspace.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_execution_user_access',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('task_stage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('stage', sa.Enum('PRE_PLAN', 'POST_PLAN', 'PRE_APPLY', name='workspacetaskstage'), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'PASSED', 'FAILED', 'ERRORED', 'CANCELED', 'UNREACHABLE', name='taskstagestatus'), nullable=True),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('plan',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('run_id', sa.Integer(), nullable=False),
    sa.Column('state_version_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'MANAGE_QUEUED', 'QUEUED', 'RUNNING', 'ERRORED', 'CANCELED', 'FINISHED', 'UNREACHABLE', name='terraformcommandstate'), nullable=True),
    sa.Column('plan_output_id', sa.Integer(), nullable=True),
    sa.Column('plan_output_binary_id', sa.Integer(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['plan_output_binary_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['plan_output_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['run_id'], ['run.id'], ),
    sa.ForeignKeyConstraint(['state_version_id'], ['state_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task_result',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'RUNNING', 'PASSED', 'FAILED', 'ERRORED', 'CANCELED', 'UNREACHABLE', name='taskresultstatus'), nullable=True),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(length=128), nullable=True),
    sa.Column('callback_id', sa.String(length=128), nullable=True),
    sa.Column('task_stage_id', sa.Integer(), nullable=False),
    sa.Column('workspace_task_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['task_stage_id'], ['task_stage.id'], ),
    sa.ForeignKeyConstraint(['workspace_task_id'], ['workspace_task.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('apply',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('state_version_id', sa.Integer(), nullable=True),
    sa.Column('log_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'MANAGE_QUEUED', 'QUEUED', 'RUNNING', 'ERRORED', 'CANCELED', 'FINISHED', 'UNREACHABLE', name='terraformcommandstate'), nullable=True),
    sa.Column('changes', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['log_id'], ['blob.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['plan.id'], ),
    sa.ForeignKeyConstraint(['state_version_id'], ['state_version.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('apply')
    op.drop_table('task_result')
    op.drop_table('plan')
    op.drop_table('task_stage')
    op.drop_table('task_execution_user_access')
    op.drop_table('state_version')
    op.drop_table('run_queue')
    op.drop_table('run')
    op.drop_table('workspace_task')
    op.drop_table('workspace_tag')
    op.drop_table('team_workspace_access')
    op.drop_table('configuration_version')
    op.drop_table('workspace')
    op.drop_table('team_user_membership')
    op.drop_table('lifecycle_environment')
    op.drop_table('user_token')
    op.drop_table('team')
    op.drop_table('task')
    op.drop_table('tag')
    op.drop_table('project')
    op.drop_table('organisation_owner')
    op.drop_table('environment')
    op.drop_table('audit_event')
    op.drop_table('user')
    op.drop_table('organisation')
    op.drop_table('lifecycle')
    # ### end Alembic commands ###
