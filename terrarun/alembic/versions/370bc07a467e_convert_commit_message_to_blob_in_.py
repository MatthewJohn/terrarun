"""Convert commit message to blob in ingress attribute

Revision ID: 370bc07a467e
Revises: 902945e27303
Create Date: 2023-07-10 06:38:14.433947

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '370bc07a467e'
down_revision = '902945e27303'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ingress_attribute', sa.Column('commit_message_blob_id', sa.Integer(), nullable=True))
    op.create_foreign_key('ingress_attribute_commit_message_blob_id_blob_id', 'ingress_attribute', 'blob', ['commit_message_blob_id'], ['id'])
    bind = op.get_bind()
    for row in bind.execute("""SELECT * FROM ingress_attribute""").all():
        if row['commit_message']:
            res = bind.execute(sa.sql.text("""INSERT INTO `blob`(data) VALUES(:data)"""), data=row['commit_message'].encode('utf-8'))
            bind.execute(
                sa.sql.text(
                    """UPDATE ingress_attribute SET commit_message_blob_id=:commit_message_blob_id WHERE ID=:ingress_attribute_id"""
                ),
                commit_message_blob_id=res.lastrowid,
                ingress_attribute_id=row['id']
            )
    op.drop_column('ingress_attribute', 'commit_message')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ingress_attribute', sa.Column('commit_message', mysql.VARCHAR(length=128), nullable=False))

    bind = op.get_bind()
    for row in bind.execute("""SELECT * FROM ingress_attribute""").all():
        if row['commit_message_blob_id']:
            blob = bind.execute(sa.sql.text("""SELECT * FROM `blob` WHERE id=:blob_id"""), blob_id=row['commit_message_blob_id']).all()
            bind.execute(
                sa.sql.text(
                    """UPDATE ingress_attribute SET commit_message=:commit_message WHERE ID=:ingress_attribute_id"""
                ),
                commit_message=blob[0]['data'].decode('utf-8'),
                ingress_attribute_id=row['id']
            )

    op.drop_constraint('ingress_attribute_commit_message_blob_id_blob_id', 'ingress_attribute', type_='foreignkey')
    op.drop_column('ingress_attribute', 'commit_message_blob_id')
    # ### end Alembic commands ###
