"""Add base tables for environment, meta workspace and lifcycele, and environment lifecycle mappings

Revision ID: 3fa73f6b43db
Revises: 9aeeefaf9da5
Create Date: 2022-10-02 08:54:26.891735

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3fa73f6b43db'
down_revision = '9aeeefaf9da5'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lifecycle',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_lifecycle_organisation_id_organisation_id'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('environment',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_environment_organisation_id_organisation_id'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('meta_workspace',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=True),
        sa.Column('organisation_id', sa.Integer(), nullable=False),
        sa.Column('lifecycle_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['lifecycle_id'], ['lifecycle.id'], name='fk_meta_workspace_lifecycle_id_lifecycle_id'),
        sa.ForeignKeyConstraint(['organisation_id'], ['organisation.id'], name='fk_meta_workspace_organisation_id_organisation_id'),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lifecycle_environment',
        sa.Column('lifecycle_id', sa.Integer(), nullable=False),
        sa.Column('environment_id', sa.Integer(), nullable=False),
        sa.Column('order', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['environment_id'], ['environment.id'], ),
        sa.ForeignKeyConstraint(['lifecycle_id'], ['lifecycle.id'], ),
        sa.PrimaryKeyConstraint('lifecycle_id', 'environment_id')
    )
    with op.batch_alter_table("organisation") as organisation_batch:
        organisation_batch.add_column(sa.Column('default_lifecycle_id', sa.Integer(), nullable=True))
        organisation_batch.create_foreign_key('fk_organisation_default_lifecycle_id_lifecycle_id', 'lifecycle', ['default_lifecycle_id'], ['id'])

    with op.batch_alter_table("workspace") as workspace_batch:
        workspace_batch.add_column(sa.Column('meta_workspace_id', sa.Integer(), nullable=False))
        workspace_batch.add_column(sa.Column('environment_id', sa.Integer(), nullable=False))
        workspace_batch.create_foreign_key('workspace_meta_workspace_id_meta_workspace_id', 'meta_workspace', ['meta_workspace_id'], ['id'])
        workspace_batch.create_foreign_key('fk_workspace_environment_id_environment_id', 'environment', ['environment_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_workspace_environment_id_environment_id', 'workspace', type_='foreignkey')
    op.drop_constraint('workspace_meta_workspace_id_meta_workspace_id', 'workspace', type_='foreignkey')
    op.drop_column('workspace', 'environment_id')
    op.drop_column('workspace', 'meta_workspace_id')
    op.drop_constraint('fk_organisation_default_lifecycle_id_lifecycle_id', 'organisation', type_='foreignkey')
    op.drop_column('organisation', 'default_lifecycle_id')
    op.drop_table('lifecycle_environment')
    op.drop_table('meta_workspace')
    op.drop_table('environment')
    op.drop_table('lifecycle')
    # ### end Alembic commands ###
