"""Add foreign key to each object table to link to api id row

Revision ID: 9afeb4e61715
Revises: 39e8a680df30
Create Date: 2023-05-08 12:24:21.494334

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '9afeb4e61715'
down_revision = '39e8a680df30'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('agent', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'agent', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('agent_pool', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'agent_pool', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('agent_token', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'agent_token', 'api_id', ['api_id_fk'], ['id'])
    op.drop_index('_api_id_suffix_index', table_name='api_id')
    op.drop_index('_object_class_object_id_in', table_name='api_id')
    op.drop_index('_object_class_object_id_uc', table_name='api_id')
    op.drop_column('api_id', 'object_class')
    op.drop_column('api_id', 'object_id')
    op.add_column('apply', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'apply', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('audit_event', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'audit_event', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('authorised_repo', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'authorised_repo', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('blob', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'blob', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('configuration_version', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'configuration_version', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('environment', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'environment', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('github_app_oauth_token', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'github_app_oauth_token', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('lifecycle', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'lifecycle', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('oauth_client', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oauth_client', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('oauth_token', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'oauth_token', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('organisation', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'organisation', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('plan', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'plan', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('project', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'project', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('run', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'run', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('run_queue', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'run_queue', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('state_version', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'state_version', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('tag', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'tag', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('task', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'task', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('task_result', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'task_result', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('task_stage', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'task_stage', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('team', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'team', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('team_workspace_access', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'team_workspace_access', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('user', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('user_token', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'user_token', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('workspace', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'workspace', 'api_id', ['api_id_fk'], ['id'])
    op.add_column('workspace_task', sa.Column('api_id_fk', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'workspace_task', 'api_id', ['api_id_fk'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'workspace_task', type_='foreignkey')
    op.drop_column('workspace_task', 'api_id_fk')
    op.drop_constraint(None, 'workspace', type_='foreignkey')
    op.drop_column('workspace', 'api_id_fk')
    op.drop_constraint(None, 'user_token', type_='foreignkey')
    op.drop_column('user_token', 'api_id_fk')
    op.drop_constraint(None, 'user', type_='foreignkey')
    op.drop_column('user', 'api_id_fk')
    op.drop_constraint(None, 'team_workspace_access', type_='foreignkey')
    op.drop_column('team_workspace_access', 'api_id_fk')
    op.drop_constraint(None, 'team', type_='foreignkey')
    op.drop_column('team', 'api_id_fk')
    op.drop_constraint(None, 'task_stage', type_='foreignkey')
    op.drop_column('task_stage', 'api_id_fk')
    op.drop_constraint(None, 'task_result', type_='foreignkey')
    op.drop_column('task_result', 'api_id_fk')
    op.drop_constraint(None, 'task', type_='foreignkey')
    op.drop_column('task', 'api_id_fk')
    op.drop_constraint(None, 'tag', type_='foreignkey')
    op.drop_column('tag', 'api_id_fk')
    op.drop_constraint(None, 'state_version', type_='foreignkey')
    op.drop_column('state_version', 'api_id_fk')
    op.drop_constraint(None, 'run_queue', type_='foreignkey')
    op.drop_column('run_queue', 'api_id_fk')
    op.drop_constraint(None, 'run', type_='foreignkey')
    op.drop_column('run', 'api_id_fk')
    op.drop_constraint(None, 'project', type_='foreignkey')
    op.drop_column('project', 'api_id_fk')
    op.drop_constraint(None, 'plan', type_='foreignkey')
    op.drop_column('plan', 'api_id_fk')
    op.drop_constraint(None, 'organisation', type_='foreignkey')
    op.drop_column('organisation', 'api_id_fk')
    op.drop_constraint(None, 'oauth_token', type_='foreignkey')
    op.drop_column('oauth_token', 'api_id_fk')
    op.drop_constraint(None, 'oauth_client', type_='foreignkey')
    op.drop_column('oauth_client', 'api_id_fk')
    op.drop_constraint(None, 'lifecycle', type_='foreignkey')
    op.drop_column('lifecycle', 'api_id_fk')
    op.drop_constraint(None, 'github_app_oauth_token', type_='foreignkey')
    op.drop_column('github_app_oauth_token', 'api_id_fk')
    op.drop_constraint(None, 'environment', type_='foreignkey')
    op.drop_column('environment', 'api_id_fk')
    op.drop_constraint(None, 'configuration_version', type_='foreignkey')
    op.drop_column('configuration_version', 'api_id_fk')
    op.drop_constraint(None, 'blob', type_='foreignkey')
    op.drop_column('blob', 'api_id_fk')
    op.drop_constraint(None, 'authorised_repo', type_='foreignkey')
    op.drop_column('authorised_repo', 'api_id_fk')
    op.drop_constraint(None, 'audit_event', type_='foreignkey')
    op.drop_column('audit_event', 'api_id_fk')
    op.drop_constraint(None, 'apply', type_='foreignkey')
    op.drop_column('apply', 'api_id_fk')
    op.add_column('api_id', sa.Column('object_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('api_id', sa.Column('object_class', mysql.VARCHAR(length=128), nullable=True))
    op.create_index('_object_class_object_id_uc', 'api_id', ['object_class', 'object_id'], unique=False)
    op.create_index('_object_class_object_id_in', 'api_id', ['object_class', 'object_id'], unique=False)
    op.create_index('_api_id_suffix_index', 'api_id', ['api_id_suffix'], unique=False)
    op.drop_constraint(None, 'agent_token', type_='foreignkey')
    op.drop_column('agent_token', 'api_id_fk')
    op.drop_constraint(None, 'agent_pool', type_='foreignkey')
    op.drop_column('agent_pool', 'api_id_fk')
    op.drop_constraint(None, 'agent', type_='foreignkey')
    op.drop_column('agent', 'api_id_fk')
    # ### end Alembic commands ###
