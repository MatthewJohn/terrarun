"""Add all properties to workspace and meta-space

Revision ID: ca2ee390768b
Revises: 3fa73f6b43db
Create Date: 2022-10-11 07:32:02.848894

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ca2ee390768b'
down_revision = '3fa73f6b43db'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('meta_workspace', sa.Column('allow_destroy_plan', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('auto_apply', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('execution_mode', sa.Enum('REMOTE', 'LOCAL', 'AGENT', name='workspaceexecutionmode'), nullable=True))
    op.add_column('meta_workspace', sa.Column('file_triggers_enabled', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('global_remote_state', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('operations', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('queue_all_runs', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('speculative_enabled', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('terraform_version', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('trigger_prefixes', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('trigger_patterns', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('vcs_repo', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('vcs_repo_branch', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('vcs_repo_ingress_submodules', sa.Boolean(), nullable=True))
    op.add_column('meta_workspace', sa.Column('vcs_repo_identifier', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('vcs_repo_tags_regex', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('working_directory', sa.String(), nullable=True))
    op.add_column('meta_workspace', sa.Column('assessments_enabled', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('description', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('allow_destroy_plan', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('execution_mode', sa.Enum('REMOTE', 'LOCAL', 'AGENT', name='workspaceexecutionmode'), nullable=True))
    op.add_column('workspace', sa.Column('file_triggers_enabled', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('global_remote_state', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('operations', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('queue_all_runs', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('speculative_enabled', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('terraform_version', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('trigger_prefixes', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('trigger_patterns', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('vcs_repo', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('vcs_repo_branch', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('vcs_repo_ingress_submodules', sa.Boolean(), nullable=True))
    op.add_column('workspace', sa.Column('vcs_repo_identifier', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('vcs_repo_tags_regex', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('working_directory', sa.String(), nullable=True))
    op.add_column('workspace', sa.Column('assessments_enabled', sa.Boolean(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('workspace', 'assessments_enabled')
    op.drop_column('workspace', 'working_directory')
    op.drop_column('workspace', 'vcs_repo_tags_regex')
    op.drop_column('workspace', 'vcs_repo_identifier')
    op.drop_column('workspace', 'vcs_repo_ingress_submodules')
    op.drop_column('workspace', 'vcs_repo_branch')
    op.drop_column('workspace', 'vcs_repo')
    op.drop_column('workspace', 'trigger_patterns')
    op.drop_column('workspace', 'trigger_prefixes')
    op.drop_column('workspace', 'terraform_version')
    op.drop_column('workspace', 'speculative_enabled')
    op.drop_column('workspace', 'queue_all_runs')
    op.drop_column('workspace', 'operations')
    op.drop_column('workspace', 'global_remote_state')
    op.drop_column('workspace', 'file_triggers_enabled')
    op.drop_column('workspace', 'execution_mode')
    op.drop_column('workspace', 'allow_destroy_plan')
    op.drop_column('workspace', 'description')
    op.drop_column('meta_workspace', 'assessments_enabled')
    op.drop_column('meta_workspace', 'working_directory')
    op.drop_column('meta_workspace', 'vcs_repo_tags_regex')
    op.drop_column('meta_workspace', 'vcs_repo_identifier')
    op.drop_column('meta_workspace', 'vcs_repo_ingress_submodules')
    op.drop_column('meta_workspace', 'vcs_repo_branch')
    op.drop_column('meta_workspace', 'vcs_repo')
    op.drop_column('meta_workspace', 'trigger_patterns')
    op.drop_column('meta_workspace', 'trigger_prefixes')
    op.drop_column('meta_workspace', 'terraform_version')
    op.drop_column('meta_workspace', 'speculative_enabled')
    op.drop_column('meta_workspace', 'queue_all_runs')
    op.drop_column('meta_workspace', 'operations')
    op.drop_column('meta_workspace', 'global_remote_state')
    op.drop_column('meta_workspace', 'file_triggers_enabled')
    op.drop_column('meta_workspace', 'execution_mode')
    op.drop_column('meta_workspace', 'auto_apply')
    op.drop_column('meta_workspace', 'allow_destroy_plan')
    # ### end Alembic commands ###
